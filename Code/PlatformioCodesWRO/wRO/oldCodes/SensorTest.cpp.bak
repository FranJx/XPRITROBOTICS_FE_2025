// Ejemplo HuskyLens I2C para Arduino
#include "HUSKYLENS.h"
#include <Wire.h>

HUSKYLENS huskylens;

// Asocia IDs a colores entrenados
String getColorById(int id) {
	if (id == 1) return "verde";
	if (id == 2) return "rojo";
	return "Desconocido";
}

// Pines para HC-SR04 (usando A0=14, A1=15, A2=16, A3=17)
#define TRIG_IZQ 14 // A0
#define ECHO_IZQ 15 // A1
#define TRIG_DER 16 // A2
#define ECHO_DER 17 // A3

long medirDistancia(int trigPin, int echoPin) {
	digitalWrite(trigPin, LOW);
	delayMicroseconds(2);
	digitalWrite(trigPin, HIGH);
	delayMicroseconds(10);
	digitalWrite(trigPin, LOW);
	long duracion = pulseIn(echoPin, HIGH, 25000); // 25ms timeout
	long distancia = duracion * 0.017;
	return distancia; // en cm
}

void setup() {
	Serial.begin(115200);
	Wire.begin();
	pinMode(TRIG_IZQ, OUTPUT);
	pinMode(ECHO_IZQ, INPUT);
	pinMode(TRIG_DER, OUTPUT);
	pinMode(ECHO_DER, INPUT);
	while (!huskylens.begin(Wire)) {
		Serial.println("HuskyLens no detectado! Verifica conexion I2C.");
		delay(1000);
	}
	Serial.println("HuskyLens listo!");
}

void loop() {
	if (!huskylens.requestBlocks()) {
		Serial.println("No se pudo leer de HuskyLens");
		delay(500);
		return;
	}
	int n = huskylens.countBlocks();
	Serial.print("Objetos detectados: ");
	Serial.println(n);
	for (int i = 0; i < n; i++) {
		HUSKYLENSResult result = huskylens.getBlock(i);
		Serial.print("ID: "); Serial.print(result.ID);
		Serial.print(" | Color: "); Serial.print(getColorById(result.ID));
		Serial.print(" | X: "); Serial.print(result.xCenter);
		Serial.print(" | Y: "); Serial.print(result.yCenter);
		Serial.print(" | Ancho: "); Serial.print(result.width);
		Serial.print(" | Alto: "); Serial.print(result.height);
		Serial.println();
	}
	// Medir distancias HC-SR04
	long distIzq = medirDistancia(TRIG_IZQ, ECHO_IZQ);
	long distDer = medirDistancia(TRIG_DER, ECHO_DER);
	Serial.print("Distancia Izq: "); Serial.print(distIzq); Serial.print(" cm | ");
	Serial.print("Distancia Der: "); Serial.print(distDer); Serial.println(" cm");
	delay(100);
}
